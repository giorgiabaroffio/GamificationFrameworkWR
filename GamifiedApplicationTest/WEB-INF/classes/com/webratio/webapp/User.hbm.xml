<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping auto-import="true" default-cascade="none" default-access="property" default-lazy="true">
  <class name="com.webratio.webapp.User" table="`user`" dynamic-update="true" dynamic-insert="true" mutable="true" polymorphism="implicit" select-before-update="false" optimistic-lock="version">
    <id name="oid" column="`oid`" type="java.lang.Integer">
      <generator class="com.webratio.rtx.hibernate.MaxPlusOneIncrementGenerator"/>
    </id>
    <property name="username" column="`username`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="password" column="`password`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="email" column="`email`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="firstName" column="`first_name`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="lastName" column="`last_name`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="companyName" column="`company_name`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="city" column="`city`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="twitter" column="`twitter`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="country" column="`country`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="certified" column="`certified`" type="java.lang.Boolean" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="type" column="`type`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="geographicalArea" column="`geographical_area`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="publicProfile" column="`public_profile`" type="java.lang.Boolean" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="linkedin" column="`linkedin`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="bio" column="`bio`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="facebook" column="`facebook`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="isoCode" column="`iso_code`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="google" column="`google`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="partner" column="`partner`" type="java.lang.Boolean" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="internal" column="`internal`" type="java.lang.Boolean" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="webSite" column="`website`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="smallPhotoRef" column="`small_photo`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="smallPhotoBinary" column="`small_photoblob`" type="blob" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="bigPhotoRef" column="`big_photo`" type="java.lang.String" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="bigPhotoBinary" column="`big_photoblob`" type="blob" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <property name="birthDate" column="`birthdate`" type="java.sql.Date" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
    <set name="groups" table="`user_group`" inverse="false" mutable="true" sort="unsorted" optimistic-lock="true" embed-xml="true">
      <key on-delete="noaction">
        <column name="`user_oid`"/>
      </key>
      <many-to-many class="com.webratio.webapp.Group" not-found="exception" embed-xml="true" unique="false">
        <column name="`group_oid`"/>
      </many-to-many>
    </set>
    <many-to-one name="defaultGroup" class="com.webratio.webapp.Group" update="true" insert="true" not-found="exception" unique="false" optimistic-lock="true" embed-xml="true">
      <column name="`group_oid`"/>
    </many-to-one>
    <set name="rankToPostForum" inverse="true" mutable="true" sort="unsorted" optimistic-lock="true" embed-xml="true">
      <key on-delete="noaction">
        <column name="`user_oid`"/>
      </key>
      <one-to-many class="com.webratio.webapp.PostForum" not-found="exception" embed-xml="true"/>
    </set>
  </class>
  <!-- mapping for relationship 'groups[User2Group]' -->
  <class entity-name="com.webratio.webapp.Rel_User_to_groups" table="`user_group`" dynamic-update="true" dynamic-insert="true" mutable="true" polymorphism="implicit" select-before-update="false" optimistic-lock="version">
    <composite-id mapped="false" unsaved-value="undefined">
      <key-property name="source_oid" column="`user_oid`" type="java.lang.Integer"/>
      <key-property name="target_oid" column="`group_oid`" type="java.lang.Integer"/>
    </composite-id>
  </class>
  <!-- mapping for relationship 'defaultGroup[User2DefaultGroup]' -->
  <class entity-name="com.webratio.webapp.Rel_User_to_defaultGroup" table="`user`" dynamic-update="true" dynamic-insert="true" mutable="true" polymorphism="implicit" select-before-update="false" optimistic-lock="version">
    <id name="source_oid" column="`oid`" type="java.lang.Integer"/>
    <property name="target_oid" column="`group_oid`" type="java.lang.Integer" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
  </class>
  <!-- mapping for relationship 'RankToPost Forum[role1g]' -->
  <class entity-name="com.webratio.webapp.Rel_User_to_rankToPostForum" table="`post_forum`" dynamic-update="true" dynamic-insert="true" mutable="true" polymorphism="implicit" select-before-update="false" optimistic-lock="version">
    <id name="target_oid" column="`oid`" type="java.lang.Integer"/>
    <property name="source_oid" column="`user_oid`" type="java.lang.Integer" unique="false" optimistic-lock="true" lazy="false" generated="never"/>
  </class>
</hibernate-mapping>
